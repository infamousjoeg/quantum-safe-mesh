{{- if .Values.demoJob.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.demoJob.name }}
  namespace: {{ .Values.namespace.name }}
  labels:
    app: {{ .Values.demoJob.name }}
    component: demo
    {{- include "quantum-safe-mesh.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: {{ .Values.demoJob.name }}
        component: demo
        {{- include "quantum-safe-mesh.labels" . | nindent 8 }}
      annotations:
        {{- with .Values.commonAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      restartPolicy: OnFailure
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: demo-client
        image: {{ include "quantum-safe-mesh.image" .Values.demoJob.image }}
        imagePullPolicy: {{ .Values.demoJob.image.pullPolicy }}
        env:
        - name: GATEWAY_URL
          value: {{ printf "http://%s.%s.svc.cluster.local:%d" .Values.gatewayService.name .Values.namespace.name (.Values.gatewayService.port | int) }}
        - name: AUTH_URL
          value: {{ include "quantum-safe-mesh.authServiceUrl" . }}
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          {{- toYaml .Values.demoJob.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.demoJob.securityContext | nindent 10 }}
  backoffLimit: {{ .Values.demoJob.backoffLimit }}
{{- end }}